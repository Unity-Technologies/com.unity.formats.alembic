{% metadata_file .yamato/common/environments.metafile %}
{% metadata_file .yamato/project.metafile %}
---

{% for package in packages -%}
{% for editor in test_editors -%}
{% for runtime_platform in package.runtime_platforms -%}
{% for platform in test_platforms[runtime_platform['0']] -%}
{% if runtime_platform['1'].enabled_platforms -%}
{% unless runtime_platform['1'].enabled_platforms contains platform.name -%}
{% continue -%}
{% endunless -%}
{% endif %}
{% if runtime_platform['1'].package_test == true -%}
{% assign project_path_list = "package_test_dummy_project" -%}
{% endif -%}
{% if runtime_platform['1'].project_path -%}
{% assign project_path_list = project_path_list | concat: runtime_platform['1'].project_path -%}
{% endif -%}
{% for job_project_path in project_path_list %}
{% if job_project_path == "package_test_dummy_project" -%}
test_{{ package.short_name }}_package_{{ runtime_platform['0'] }}_{{ editor.name }}_{{ platform.name }}:
{% if is_monorepo == true -%}
  name : "{{ package.short_name }}: Test {{ runtime_platform['0'] }}package{{ editor.version }} on {{ platform.name }}"
{% else -%}
  name : "Test {{ runtime_platform['0'] }}package{{ editor.version }} on {{ platform.name }}"
{% endif -%}
{% else -%}
{% assign project_name = job_project_path | replace: "\\", "/" | split: "/" | last | downcase -%}
{% assign display_project_name = job_project_path | replace: "\\", "/" | split: "/" | last | prepend: " " | append: " " -%}
test_{{ package.short_name }}_{{ runtime_platform['0'] }}_{{ project_name }}_{{ editor.name }}_{{ platform.name }}:
{% if is_monorepo == true -%}
  name : "{{ package.short_name }}: Test {{ runtime_platform['0'] }}{{ display_project_name }}{{ editor.version }} on {{ platform.name }}"
{% else -%}
  name : "Test {{ runtime_platform['0'] }}{{ display_project_name }}{{ editor.version }} on {{ platform.name }}"
{% endif -%}
{% endif -%}
  agent:
    type: {{ platform.type }}
    image: {{ platform[editor.name].image }}
    flavor: {{ platform.flavor}}
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
{% if job_project_path == "package_test_dummy_project" -%}
    - {% if platform.name == 'centOS' -%} DISPLAY=:0 {% endif -%} upm-ci package test --unity-version {{ editor.version }} --package-path {{ package.root_dir }}
{% else -%}
    - {% if platform.name == 'centOS' -%} DISPLAY=:0 {% endif -%} upm-ci project test  --project-path {{ job_project_path }} --type project-tests --unity-version {{ editor.version }}
{% endif -%}
  artifacts:
    logs.zip:
      paths:
        - "upm-ci~/logs/**/*"
        - "upm-ci~/test-results/**/*"
    artifacts.zip:
      paths:
        - "upm-ci~/packages/**/*"
        - "upm-ci~/templates/**/*"
{% if tests_dependencies[runtime_platform['0']] -%}
{% if tests_dependencies[runtime_platform['0']] contains platform.name -%}
  dependencies:
    - .yamato/dependencies.yml#pre_test_{{ package.short_name }}_{{ editor.name }}_{{ platform.name }}
{% endif -%}
{% endif -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% if is_monorepo == true -%}
test_all_packages_all_editors_all_platforms:
  name: "All packages: Test all editors on all platforms"
  dependencies:
{% for package in packages -%}
    - .yamato/common/package-test.yml#test_{{ package.short_name }}_all_editors_all_platforms
{% endfor -%}
{% endif -%}  
{% for package in packages -%}
test_{{ package.short_name }}_all_editors_all_platforms:
{% if is_monorepo == true -%}
  name: "{{ package.short_name }}: Test all editors on all platforms"
{% else -%}
  name : "Test all editors on all platforms"
{% endif -%}  
  dependencies:
{% for editor in test_editors -%}
{% for runtime_platform in package.runtime_platforms -%}
{% for platform in test_platforms[runtime_platform['0']] -%}
{% if runtime_platform['1'].enabled_platforms -%}
{% unless runtime_platform['1'].enabled_platforms contains platform.name -%}
{% continue -%}
{% endunless -%}
{% endif %}
{% if runtime_platform['1'].project_path -%}
{% assign project_path_list = runtime_platform['1'].project_path -%}
{% assign job_is_custom_projects = true -%}
{% else %}
{% assign project_path_list = generic_project_path -%}
{% assign job_is_custom_projects = false -%}
{% endif -%}
{% for job_project_path in project_path_list -%}
{% assign project_name = job_project_path | replace: "\\", "/" | split: "/" | last | downcase -%}
    - .yamato/common/package-test.yml#test_{{ package.short_name }}_{{ runtime_platform['0'] }}_{{ project_name }}_{{ editor.name }}_{{ platform.name }}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% if is_monorepo == true -%}
test_all_packages_PR_trigger:
  name: "All packages: Test PR trigger"
  dependencies:
{% for package in packages -%}
    - .yamato/common/package-test.yml#test_{{ package.short_name }}_PR_trigger
{% endfor -%}
{% endif -%}  
{% for package in packages -%}
test_{{ package.short_name }}_PR_trigger:
{% if is_monorepo == true -%}
  name: "{{ package.short_name }}: Test PR trigger"
{% else -%}
  name : "Test PR trigger"
{% endif -%}  
  dependencies:
{% for editor in test_editors -%}
{% for runtime_platform in package.runtime_platforms -%}
{% for platform in test_platforms[runtime_platform['0']] -%}
{% if runtime_platform['1'].enabled_platforms -%}
{% unless runtime_platform['1'].enabled_platforms contains platform.name -%}
{% continue -%}
{% endunless -%}
{% endif -%}
{% if platform[editor.name].pr_trigger == false -%}
{% continue -%}
{% endif -%}
{% if runtime_platform['1'].project_path -%}
{% assign project_path_list = runtime_platform['1'].project_path -%}
{% assign job_is_custom_projects = true -%}
{% else -%}
{% assign project_path_list = generic_project_path -%}
{% assign job_is_custom_projects = false -%}
{% endif -%}
{% for job_project_path in project_path_list -%}
{% assign project_name = job_project_path | replace: "\\", "/" | split: "/" | last | downcase -%}
    - .yamato/common/package-test.yml#test_{{ package.short_name }}_{{ runtime_platform['0'] }}_{{ project_name }}_{{ editor.name }}_{{ platform.name }}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}
{% endfor -%}