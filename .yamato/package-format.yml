{% metadata_file .yamato/global.metafile %}
---
# Documentation: https://internaldocs.hq.unity3d.com/unity-meta/

 formatting:
   name: Formatting
   agent:
     type: {{ ubuntu20_platform.type }}
     image: {{ ubuntu20_platform.image }}
     flavor: {{ ubuntu20_platform.flavor }}
   commands:
     - "echo -e \"[extensions]\nlargefiles=\n\" > ~/.hgrc"
     - hg clone -u beta http://hg-mirror-slo.hq.unity3d.com/unity-extra/unity-meta ~/unity-meta
     - perl ~/unity-meta/Tools/Format/format.pl --nobackups .
     - git diff --output ./format.patch
     - cat ./format.patch
     - | # Checking if there is a diff, to fail the job if yes (-s check means does the file contain something)
       if [ -s format.patch ]; then exit 1; fi
   triggers:
     expression: pull_request.target eq "master"
   artifacts:
     diff:
       paths:
         - format.patch

 formatting_apply:
   name: Formatting (Apply requested changes)
   agent:
     type: {{ ubuntu20_platform.type }}
     image: {{ ubuntu20_platform.image }}
     flavor: {{ ubuntu20_platform.flavor }}
   commands:
     - git config --global user.name "Alembic CI"
     - git config --global user.email $YAMATO_OWNER_EMAIL
     - git checkout $GIT_BRANCH
     - git pull origin $GIT_BRANCH # In case the job was not run on the latest commit, attempt to get it. There may be situations with merge conflicts, in that case wait for everyone to push their changes and then only run the formatting job on HEAD.
     - "echo -e \"[extensions]\nlargefiles=\n\" > ~/.hgrc"
     - hg clone -u beta http://hg-mirror-slo.hq.unity3d.com/unity-extra/unity-meta ~/unity-meta
     - perl ~/unity-meta/Tools/Format/format.pl --nobackups .
     - git add .
     - git commit -m "Apply formatting changes"
     - git push --set-upstream origin $GIT_BRANCH
   timeout: 1
